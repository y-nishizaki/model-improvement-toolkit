[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "model-improvement-toolkit"
version = "0.1.0"
description = "機械学習モデル（LightGBMとXGBoost）の改善のための示唆を提供するPythonパッケージ"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "Model Improvement Toolkit Contributors", email = "contact@example.com"},
]
keywords = ["machine learning", "model improvement", "lightgbm", "xgboost", "analysis"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

dependencies = [
    "lightgbm>=3.0",
    "xgboost>=1.5",
    "scikit-learn>=1.0",
    "pandas>=1.3",
    "numpy>=1.20",
    "matplotlib>=3.4",
    "seaborn>=0.11",
    "shap>=0.40",
    "jinja2>=3.0",
    "optuna>=3.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
    "pytest-mock>=3.10",
    "black>=23.0",
    "mypy>=1.0",
    "flake8>=6.0",
    "isort>=5.0",
    "pre-commit>=3.0",
    "sphinx>=5.0",
    "sphinx-rtd-theme>=1.0",
    "nbsphinx>=0.8",
    "bandit>=1.7",
]

[project.urls]
Homepage = "https://github.com/y-nishizaki/model-improvement-toolkit"
Documentation = "https://model-improvement-toolkit.readthedocs.io"
Repository = "https://github.com/y-nishizaki/model-improvement-toolkit"
Issues = "https://github.com/y-nishizaki/model-improvement-toolkit/issues"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
model_improvement_toolkit = ["templates/*", "config/*"]

[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = [
    "--strict-markers",
    "--cov=model_improvement_toolkit",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-fail-under=90",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88
skip_gitignore = true

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "lightgbm.*",
    "xgboost.*",
    "shap.*",
    "optuna.*",
    "seaborn.*",
]
ignore_missing_imports = true

[tool.coverage.run]
source = ["src/model_improvement_toolkit"]
omit = [
    "*/tests/*",
    "*/__init__.py",
]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false

[tool.coverage.html]
directory = "htmlcov"

[tool.bandit]
exclude_dirs = ["tests", "venv", ".venv"]
skips = ["B101"]  # assert_used